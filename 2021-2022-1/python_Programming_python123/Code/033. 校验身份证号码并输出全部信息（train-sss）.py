'''
描述
中国目前采用的是18位身份证号，其第1-2位为省（市、自治区）、3-6位为县区、第7-10位数字是出生年、11-12位是出生月份、13-14是出生日期、第17位是性别，奇数为男性，偶数为女性，第18位是校验位。
如果身份证号码的其中一位填错了（包括最后一个校验位），则校验算法可以检测出来。如果身份证号的相邻2位填反了，则校验算法可以检测出来。校验规则如下：
1. 将前面的身份证号码17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。
　　2. 将这17位数字和系数相乘的结果相加。
　　3. 用加出来和除以11，看余数只可能是：0－1－2－3－4－5－6－7－8－9－10
分别对应的最后一位身份证的号码为：1－0－X－9－8－7－6－5－4－3－2
　　4. 通过上面得知如果余数是2，就会在身份证的第18位数字上出现罗马数字的X（大写英文字母X）。如果余数是10，身份证的最后一位号码就是2。
用户输入一个身份证号，校验其是否是合法的身份证号码。
如身份证号码不合法输出：
    身份证校验位错误!
如身份证号码合法且地区码在AreaCode.txt中存在则分别在5行中分别输出：
    身份证号码校验为合法号码!
    地区：**省（市、自治区）***
    出生：****年**月**日
    年龄：**
    性别：*
如身份证号码合法但地区码在AreaCode.txt中不存在则输出：
    地区码不存在
其中星号“*”代表从身份证中获取的省、县区，出生年、月、日，年龄和性别。附件中存储了省县区编码，文件编码为utf-8。
输入格式
 一个18位身份证号，末位为数字或大写字母X
输出格式
如身份证号码不合法输出 '身份证校验位错误!'
如身份证号码合法则分别在5行中分别输出:
身份证号码校验为合法号码!
地区：**省（市、自治区）***
出生：****年**月**日
年龄：**
性别：*
'''
import datetime
f = open('AreaCode.txt', 'r', encoding = 'utf-8').readlines()
area = {}
areaCode = []
for i in range(len(f)):
    g = f[i].split()
    areaCode.append(g[0])
    area[g[0]] = g[1]
Coefficient = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]
Remainder = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]
calc = 0
ID = input()
for i in range(17):
    calc = calc + eval(ID[i]) * Coefficient[i]
calc = calc % 11
if str(Remainder[calc]) == ID[17]:
    print('身份证号码校验为合法号码!')
    if ID[:6] not in areaCode:
        print('地区码不存在')
    else:
        ug = ID[:2] + '0000'
        Area = '地区：' + area[ug] + '省（市、自治区）' + area[ID[:6]]
        print(Area)
        Birth = '出生：' + ID[6:10] + '年' + ID[10:12] + '月' + ID[12:14] + '日'
        print(Birth)
        Age = '年龄：' +  str(datetime.datetime.now().year - eval(ID[6:10]))
        print(Age)
        print('性别：', end = '')
        sex = int(ID[16])
        Sex = '男' if sex % 2 == 1 else '女'
        print(Sex)
else:
    print('身份证校验位错误!')
